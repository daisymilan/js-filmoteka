{"mappings":"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","sources":["src/js/script.js","src/js/pagination.js"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3';\n  const API_KEY = 'api_key=b5e824a3d922f68ba211fcf6dbdcb6f5';\n  const API_URL = BASE_URL + '/discover/movie?sort_by-popularity.desc&' + API_KEY;\n  const IMG_URL = 'https://image.tmdb.org/t/p/w500';\n  const searchURL = BASE_URL + '/search/movie?' + API_KEY;\n  const getGenres = BASE_URL + '/genre/movie/list?' + API_KEY;\n  //localStorage\n  let currentMovieTitle, currentMovieID, queue, watched;\n  JSON.parse(localStorage.getItem(\"movie-queue\")) === null ? queue = [] : queue = JSON.parse(localStorage.getItem(\"movie-queue\"));\n  localStorage.setItem(\"movie-queue\", JSON.stringify(queue));\n  JSON.parse(localStorage.getItem(\"movie-watched\")) === null ? watched = [] : watched = JSON.parse(localStorage.getItem(\"movie-watched\"));\n  localStorage.setItem(\"movie-watched\", JSON.stringify(watched));\n  // MODAL SECTION\n  const modal = document.getElementById('myModal');\n  const modalPoster = document.getElementById('modal-poster');\n  const modalTitle = document.getElementById('modal-title');\n  const modalVote = document.getElementById('modal-vote');\n  const modalPopularity = document.getElementById('modal-popularity');\n  const modalOrigTitle = document.getElementById('modal-original-title');\n  const modalGenre = document.getElementById('modal-genre');\n  const modalOverview = document.getElementById('modal-overview');\n  const addToWatchedBtn = document.getElementById('addToWatchedBtn');\n  const addToQueuBtn = document.getElementById('addToQueuBtn');\nconst closeBtn = document.getElementsByClassName('close')[0];\nlet genres;\nfetch(getGenres)\n    .then(response => response.json())\n    .then(data => {\n        genres = data.genres;\n      getMovies(API_URL, genres); // Call getMovies with genres\n      showMovies(data, genres)\n    })\n    .catch(error => {\n        // console.error('Error fetching genres:', error);\n    });\n  // function to open the modal with movie details\n  function openModal(movie) {\n    modalPoster.src = `https://image.tmdb.org/t/p/w500/${movie.poster_path}`;\n    modalTitle.textContent = movie.title.toUpperCase();\n    modalVote.innerHTML = `\n      <span class=\"vote-avg\">${movie.vote_average.toFixed(1)}</span>` + '   /   ' + movie.vote_count;\n    modalPopularity.textContent = movie.popularity.toFixed(1);\n    modalOrigTitle.textContent = movie.original_title.toUpperCase();\n\n    const movieGenres = movie.genre_ids.map(genreId => {\n        const genre = genres.find(genre => genre.id === genreId);\n        return genre ? genre.name : '';\n    }).join(', ');\n    modalGenre.textContent = movieGenres;\n    modalOverview.textContent = movie.overview;\n    modal.style.display = 'block';\n    currentMovieID = movie.id;\n    currentMovieTitle = movie.title;\n  }\n  // function to close the modal\n  function closeModal() {\n    modal.style.display = 'none';\n  }\n  // event listener for the close button\n  closeBtn.addEventListener('click', closeModal);\n  // event listener for clicks outside the modal\n  window.addEventListener('click', function (event) {\n    if (event.target === modal) {\n      closeModal();\n    }\n  });\n  const main = document.getElementById('main');\n  const form = document.getElementById('search-form');\n  const search = document.getElementById('search-input');\n  const loader = document.querySelector('.loader-container');\n \nlet lastUrl;\nlet currentPage = 1; // Initialize currentPage variable\nlet nextPage, prevPage, totalPages;\nconst prev = document.getElementById('prev');\nconst next = document.getElementById('next');\n  getMovies(API_URL);\n  // DISPLAY MOVIE CARDS\n  function getMovies(url) {\n    lastUrl = url;\n    main.classList.toggle('is-hidden');\n    loader.classList.toggle('is-hidden');\n    fetch(url)\n      .then(res => res.json())\n      .then(data => {\n        console.log(data.results);\n        if (data.results.length !== 0) {\n          showMovies(data.results);\n          currentPage = data.page;\n          main.classList.toggle('is-hidden');\n          loader.classList.toggle('is-hidden');\n          updatePaginationButtons(); // Update pagination buttons\n        }else {\n            main.classList.toggle('is-hidden');\n            loader.classList.toggle('is-hidden');\n            main.innerHTML = `<h1 class=\"no-results\">No Results Found</h1>`;\n          }      \n          function updatePaginationButtons() {\n      if (currentPage <= 1) {\n            if (prev)  prev.classList.add('disabled');\n            if (next) next.classList.remove('disabled');\n            } else if (currentPage >= totalPages) {\n            if (prev)  prev.classList.remove('disabled');\n            if (next)  next.classList.add('disabled');\n            } else {\n             if (prev)  prev.classList.remove('disabled');\n             if (next)  next.classList.remove('disabled');\n            }\n            prev.addEventListener('click', () => {\n              if (prevPage > 0) {\n              pageCall(prevPage);\n              }\n              });\n              // Event listener for the next page\n                   next.addEventListener('click', () => {\n                     if (nextPage <= totalPages) {\n                       pageCall(nextPage);\n                     }\n                   });\n              } \n       });\n  }\n// Add event listeners for prev and next inside this block\n    // prev = document.getElementById('prev');\n    // next = document.getElementById('next');\n// function for previous page\n// if (prev) {\n// prev.addEventListener('click', () => {\n// if (prevPage > 0) {\n//   pageCall(prevPage);\n// }\n// });\n// }\n//     // function for the next page\n// if (next) {\n// next.addEventListener('click', () => {\n// if (nextPage <= totalPages) {\n//   pageCall(nextPage);\n// }\n// });\n// }\nfunction showMovies(data) {\n    main.innerHTML = '';\n    data.forEach(movie => {\n      const { title, poster_path, release_date, genre_ids } = movie;\n      const movieEl = document.createElement('div');\n      movieEl.classList.add('movie');\n      const movieGenres = genre_ids && Array.isArray(genres)\n            ? genre_ids.map(genreId => {\n                const genre = genres.find(genre => genre.id === genreId);\n                return genre ? genre.name : '';\n            }).join(', ')\n        : '';\n      movieEl.innerHTML = `\n            <img src=\"${poster_path\n          ? IMG_URL + poster_path\n          : 'http:/>/via.placeholder.com/1080x1500'\n        }\"\n                alt=\"${title}\"/>\n            <div class=\"movie-info\">\n                <h3>${title.toUpperCase()}</h3>\n                <div class=\"movie-details\">\n                <div>${movieGenres} | ${release_date.slice(0,4)}</div>\n                </div>\n                  </div>\n                  `;\n                  movieEl.addEventListener('click', function () {\n                    openModal(movie);\n                  });\n      main.appendChild(movieEl);\n    });\n  }\n  form.addEventListener('submit', e => {\n    e.preventDefault();\n    const searchTerm = search.value;\n    if (searchTerm) {\n      getMovies(searchURL + '&query=' + searchTerm);\n    } else {\n      getMovies(API_URL);\n    }\n  });\n  // function for previous page\n  prev.addEventListener('click', () => {\n    if (prevPage > 0) {\n      pageCall(prevPage);\n    }\n  });\n  // function for the next page\n  next.addEventListener('click', () => {\n    if (nextPage <= totalPages) {\n      pageCall(nextPage);\n    }\n  });\n  export function pageCall(page) {\n    let urlSplit = lastUrl.split('?');\n    let queryParams = urlSplit[1].split('&');\n    let key = queryParams[queryParams.length - 1].split('=');\n    if (key[0] != 'page') {\n      let url = lastUrl + '&page=' + page;\n      getMovies(url);\n    } else {\n      key[1] = page.toString();\n      let a = key.join('=');\n      queryParams[queryParams.length - 1] = a;\n      let b = queryParams.join('&');\n      let url = urlSplit[0] + '?' + b;\n      getMovies(url);\n    }\n  }\n  //Add to Watched (localStorage)\n  addToWatchedBtn.addEventListener('click', () => {\n    watched.includes(currentMovieID) ?\n      alert(`${currentMovieTitle} has been watched already`) :\n      watched.push(currentMovieID);\n    localStorage.setItem('movie-watched', JSON.stringify(watched));\n  })\n  //Add to Queue (localStorage)\n  addToQueuBtn.addEventListener('click', () => {\n    queue.includes(currentMovieID) ?\n      alert(`${currentMovieTitle} has been added to the queue already`) :\n      queue.push(currentMovieID);\n    localStorage.setItem('movie-queue', JSON.stringify(queue));\n  })\n  //Pressing escape to close modal\n  document.body.addEventListener('keydown', event => {\n    if (event.code === 'Escape') {\n      closeModal();\n    }\n  });","import { pageCall } from './script.js';\n\nconst totalPages = 20; \nconst paginationContainer = document.querySelector('.pagination');\n\n// Function to generate pagination buttons\nfunction generatePaginationButtons(currentPage) {\n  let buttonsHTML = '';\n  const numButtonsToShow = 5; // Number of pagination buttons to show\n\nlet startPage;\nif (currentPage < 4) {\n  startPage = 1;\n  if (currentPage != 1) {\n    buttonsHTML += `<button class=\"pagination-button previous-page\" \n    type=\"submit\" id=\"prev\">&#11164</button>`;\n  }\n} else if (currentPage >= totalPages - 2) {\n  startPage = totalPages - numButtonsToShow + 1;\n} else {\n  startPage = currentPage - 2;\n}\n  if (startPage > 1) {\n    buttonsHTML += `<button class=\"pagination-button previous-page\" type=\"submit\" id=\"prev\">&#11164</button>`;\n    buttonsHTML += `<button class=\"pagination-button\" type=\"submit\">1</button>`;\n    if (startPage > 2) {\n      buttonsHTML += `<button class=\"pagination-button\" type=\"submit\">...</button>`;\n    }\n  }\n\n  for (let i = startPage; i <= totalPages && i < startPage + numButtonsToShow; i++) {\n    if (i === currentPage) {\n      buttonsHTML += `<button class=\"pagination-button current-page\" type=\"submit\">${i}</button>`;\n    } else {\n      buttonsHTML += `<button class=\"pagination-button\" type=\"submit\">${i}</button>`;\n    }\n  }\n\n  if (startPage + numButtonsToShow <= totalPages) {\n    if (startPage + numButtonsToShow < totalPages) {\n      buttonsHTML += `<button class=\"pagination-button\" type=\"submit\">...</button>`;\n    }\n    buttonsHTML += `<button class=\"pagination-button\" type=\"submit\">${totalPages}</button>`;\n  }\n\n  if (currentPage < totalPages) {\n    buttonsHTML += `<button class=\"pagination-button next-page\" type=\"submit\" id=\"next\">&#11166</button>`;\n  }\n\n  paginationContainer.innerHTML = buttonsHTML;\n}\n\nlet currentPage = 1; // Initialize current page number\ngeneratePaginationButtons(currentPage);\n\n// Event listener for pagination container\npaginationContainer.addEventListener('click', (event) => {\n  const targetButton = event.target;\n  \n  if (targetButton.classList.contains('pagination-button') && !targetButton.id) {\n    const pageNumber = parseInt(targetButton.textContent);\n    if (!isNaN(pageNumber)) {\n      currentPage = pageNumber; // Update currentPage variable\n      generatePaginationButtons(currentPage); \n      pageCall(currentPage);\n    }\n  }\n\n  else if (targetButton.classList.contains('previous-page')) {\n    if (currentPage > 1) {\n      currentPage--; \n      generatePaginationButtons(currentPage); \n      pageCall(currentPage);\n    }\n  }\n \n  else if (targetButton.classList.contains('next-page')) {\n    if (currentPage < totalPages) {\n      currentPage++; \n      generatePaginationButtons(currentPage); \n      pageCall(currentPage);\n    }\n  }\n});"],"names":["$66b821ea461d9f2a$var$currentMovieTitle","$66b821ea461d9f2a$var$currentMovieID","$66b821ea461d9f2a$var$queue","$66b821ea461d9f2a$var$watched","$66b821ea461d9f2a$var$API_KEY","$66b821ea461d9f2a$var$API_URL","$66b821ea461d9f2a$var$BASE_URL","JSON","parse","localStorage","getItem","setItem","stringify","$66b821ea461d9f2a$var$genres","$66b821ea461d9f2a$var$modal","document","getElementById","$66b821ea461d9f2a$var$modalPoster","$66b821ea461d9f2a$var$modalTitle","$66b821ea461d9f2a$var$modalVote","$66b821ea461d9f2a$var$modalPopularity","$66b821ea461d9f2a$var$modalOrigTitle","$66b821ea461d9f2a$var$modalGenre","$66b821ea461d9f2a$var$modalOverview","$66b821ea461d9f2a$var$addToWatchedBtn","$66b821ea461d9f2a$var$addToQueuBtn","$66b821ea461d9f2a$var$closeBtn","getElementsByClassName","$66b821ea461d9f2a$var$closeModal","style","display","fetch","then","response","json","data","genres","$66b821ea461d9f2a$var$getMovies","$66b821ea461d9f2a$var$showMovies","catch","error","addEventListener","window","event","target","$66b821ea461d9f2a$var$lastUrl","$66b821ea461d9f2a$var$totalPages","$66b821ea461d9f2a$var$main","$66b821ea461d9f2a$var$form","$66b821ea461d9f2a$var$search","$66b821ea461d9f2a$var$loader","querySelector","$66b821ea461d9f2a$var$currentPage","$66b821ea461d9f2a$var$prev","$66b821ea461d9f2a$var$next","url","classList","toggle","res","console","log","results","length","page","add","remove","$66b821ea461d9f2a$var$prevPage","$66b821ea461d9f2a$var$nextPage","updatePaginationButtons","innerHTML","forEach","movie","title","poster_path","release_date","genre_ids","movieEl","createElement","movieGenres","Array","isArray","map","genreId","genre2","find","genre","id","name","join","concat","toUpperCase","slice","src","textContent","vote_average","toFixed","vote_count","popularity","original_title","genre1","overview","$66b821ea461d9f2a$var$openModal","appendChild","$66b821ea461d9f2a$export$26f0a13c57387c91","urlSplit","split","queryParams","key","toString","a","b","e","preventDefault","searchTerm","value","$66b821ea461d9f2a$var$searchURL","includes","alert","push","body","code","$dfaf77c789ce7a24$var$totalPages","$dfaf77c789ce7a24$var$paginationContainer","$dfaf77c789ce7a24$var$generatePaginationButtons","currentPage1","startPage","buttonsHTML","i","$dfaf77c789ce7a24$var$currentPage","targetButton","contains","pageNumber","parseInt","isNaN"],"version":3,"file":"library.e232998b.js.map"}